{"ast":null,"code":"var _jsxFileName = \"D:\\\\Luky\\\\Learn Coding\\\\Personal Website\\\\website\\\\src\\\\Work.js\",\n  _s = $RefreshSig$();\n/* import { React, useRef } from \"react\"\r\nimport { useInView } from \"react-intersection-observer\"\r\n\r\n\r\nexport default function Work(props) {\r\n    const [ref, inView] = useInView({\r\n        threshold: 0.5,\r\n        triggerOnce: true,\r\n    })\r\n\r\n    const titleRef = useRef(null)\r\n    const animateTitle = () =>\r\n        titleRef.current.classList.add(\"animate-title\")\r\n\r\n    return (\r\n        <main id=\"main\" className={props.darkMode ? \"dark\" : \"\"}>\r\n            <div ref={ref} className=\"section\">\r\n                <h1 ref={titleRef} className=\"main-title\">\r\n                    {inView && animateTitle()}\r\n                    <span>M</span>\r\n                    <span>Y</span>\r\n                    <span> </span>\r\n                    <span>W</span>\r\n                    <span>O</span>\r\n                    <span>R</span>\r\n                    <span>K</span>\r\n                    <span>S</span>\r\n                </h1>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"grid-item1\"></div>\r\n                    <div className=\"grid-item2\"></div>\r\n                    <div className=\"grid-item3\"></div>\r\n                    <div className=\"grid-item4\"></div>\r\n                    <div className=\"grid-item5\"></div>\r\n                </div>\r\n                <a href=\"#\" className=\"link-work\">\r\n                    SEE ALL MY WORKS <i className=\"arrow\">&#8594;</i>\r\n                </a>\r\n            </div>\r\n        </main >\r\n    )\r\n} */\n\nimport { React, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Work(props) {\n  _s();\n  const [animate, setAnimate] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  const handleScroll = () => {\n    const worksSection = document.getElementById(\"main\");\n    const sectionTop = worksSection.offsetTop;\n    const sectionBottom = sectionTop + worksSection.offsetHeight;\n    if (window.pageYOffset >= sectionTop && window.pageYOffset <= sectionBottom && !animate) {\n      setAnimate(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"main\",\n    className: props.darkMode ? \"dark\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `main-title ${animate ? \"animate\" : \"\"}`,\n      children: \"MY WORKS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"link-work\",\n      children: [\"SEE ALL MY WORKS \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"arrow\",\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Work, \"z07FJ1oDfa7+qdGd0fWFFN4Jr94=\");\n_c = Work;\nvar _c;\n$RefreshReg$(_c, \"Work\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Work","props","_s","animate","setAnimate","window","addEventListener","handleScroll","removeEventListener","worksSection","document","getElementById","sectionTop","offsetTop","sectionBottom","offsetHeight","pageYOffset","id","className","darkMode","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["D:/Luky/Learn Coding/Personal Website/website/src/Work.js"],"sourcesContent":["/* import { React, useRef } from \"react\"\r\nimport { useInView } from \"react-intersection-observer\"\r\n\r\n\r\nexport default function Work(props) {\r\n    const [ref, inView] = useInView({\r\n        threshold: 0.5,\r\n        triggerOnce: true,\r\n    })\r\n\r\n    const titleRef = useRef(null)\r\n    const animateTitle = () =>\r\n        titleRef.current.classList.add(\"animate-title\")\r\n\r\n    return (\r\n        <main id=\"main\" className={props.darkMode ? \"dark\" : \"\"}>\r\n            <div ref={ref} className=\"section\">\r\n                <h1 ref={titleRef} className=\"main-title\">\r\n                    {inView && animateTitle()}\r\n                    <span>M</span>\r\n                    <span>Y</span>\r\n                    <span> </span>\r\n                    <span>W</span>\r\n                    <span>O</span>\r\n                    <span>R</span>\r\n                    <span>K</span>\r\n                    <span>S</span>\r\n                </h1>\r\n                <div className=\"grid-container\">\r\n                    <div className=\"grid-item1\"></div>\r\n                    <div className=\"grid-item2\"></div>\r\n                    <div className=\"grid-item3\"></div>\r\n                    <div className=\"grid-item4\"></div>\r\n                    <div className=\"grid-item5\"></div>\r\n                </div>\r\n                <a href=\"#\" className=\"link-work\">\r\n                    SEE ALL MY WORKS <i className=\"arrow\">&#8594;</i>\r\n                </a>\r\n            </div>\r\n        </main >\r\n    )\r\n} */\r\n\r\nimport { React, useEffect, useState } from \"react\"\r\n\r\nexport default function Work(props) {\r\n    const [animate, setAnimate] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n        return () => window.removeEventListener(\"scroll\", handleScroll);\r\n    }, []);\r\n\r\n    const handleScroll = () => {\r\n        const worksSection = document.getElementById(\"main\");\r\n        const sectionTop = worksSection.offsetTop;\r\n        const sectionBottom = sectionTop + worksSection.offsetHeight;\r\n\r\n        if (window.pageYOffset >= sectionTop && window.pageYOffset <= sectionBottom && !animate) {\r\n            setAnimate(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main id=\"main\" className={props.darkMode ? \"dark\" : \"\"}>\r\n            <h1 className={`main-title ${animate ? \"animate\" : \"\"}`}>MY WORKS</h1>\r\n            <div className=\"grid-container\">\r\n                <div className=\"grid-item1\"></div>\r\n                <div className=\"grid-item2\"></div>\r\n                <div className=\"grid-item3\"></div>\r\n                <div className=\"grid-item4\"></div>\r\n                <div className=\"grid-item5\"></div>\r\n            </div>\r\n            <a href=\"#\" className=\"link-work\">\r\n                SEE ALL MY WORKS <i className=\"arrow\">&#8594;</i>\r\n            </a>\r\n        </main >\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
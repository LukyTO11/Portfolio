{"ast":null,"code":"/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.12\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"Typed\"] = factory();else root[\"Typed\"] = factory();\n})(this, function () {\n  return (/******/function (modules) {\n      // webpackBootstrap\n      /******/ // The module cache\n      /******/\n      var installedModules = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/\n        /******/ // Check if module is in cache\n        /******/if (installedModules[moduleId]) /******/return installedModules[moduleId].exports;\n        /******/\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = installedModules[moduleId] = {\n          /******/exports: {},\n          /******/id: moduleId,\n          /******/loaded: false\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Flag the module as loaded\n        /******/\n        module.loaded = true;\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /******/\n      /******/ // expose the modules object (__webpack_modules__)\n      /******/\n      __webpack_require__.m = modules;\n      /******/\n      /******/ // expose the module cache\n      /******/\n      __webpack_require__.c = installedModules;\n      /******/\n      /******/ // __webpack_public_path__\n      /******/\n      __webpack_require__.p = \"\";\n      /******/\n      /******/ // Load entry module and return exports\n      /******/\n      return __webpack_require__(0);\n      /******/\n    }\n    /************************************************************************/\n    /******/([/* 0 */\n    /***/function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError('Cannot call a class as a function');\n        }\n      }\n      var _initializerJs = __webpack_require__(1);\n      var _htmlParserJs = __webpack_require__(3);\n\n      /**\n       * Welcome to Typed.js!\n       * @param {string} elementId HTML element ID _OR_ HTML element\n       * @param {object} options options object\n       * @returns {object} a new Typed object\n       */\n\n      var Typed = function () {\n        function Typed(elementId, options) {\n          _classCallCheck(this, Typed);\n\n          // Initialize it up\n          _initializerJs.initializer.load(this, options, elementId);\n          // All systems go!\n          this.begin();\n        }\n\n        /**\n         * Toggle start() and stop() of the Typed instance\n         * @public\n         */\n\n        _createClass(Typed, [{\n          key: 'toggle',\n          value: function toggle() {\n            this.pause.status ? this.start() : this.stop();\n          }\n\n          /**\n           * Stop typing / backspacing and enable cursor blinking\n           * @public\n           */\n        }, {\n          key: 'stop',\n          value: function stop() {\n            if (this.typingComplete) return;\n            if (this.pause.status) return;\n            this.toggleBlinking(true);\n            this.pause.status = true;\n            this.options.onStop(this.arrayPos, this);\n          }\n\n          /**\n           * Start typing / backspacing after being stopped\n           * @public\n           */\n        }, {\n          key: 'start',\n          value: function start() {\n            if (this.typingComplete) return;\n            if (!this.pause.status) return;\n            this.pause.status = false;\n            if (this.pause.typewrite) {\n              this.typewrite(this.pause.curString, this.pause.curStrPos);\n            } else {\n              this.backspace(this.pause.curString, this.pause.curStrPos);\n            }\n            this.options.onStart(this.arrayPos, this);\n          }\n\n          /**\n           * Destroy this instance of Typed\n           * @public\n           */\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            this.reset(false);\n            this.options.onDestroy(this);\n          }\n\n          /**\n           * Reset Typed and optionally restarts\n           * @param {boolean} restart\n           * @public\n           */\n        }, {\n          key: 'reset',\n          value: function reset() {\n            var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n            clearInterval(this.timeout);\n            this.replaceText('');\n            if (this.cursor && this.cursor.parentNode) {\n              this.cursor.parentNode.removeChild(this.cursor);\n              this.cursor = null;\n            }\n            this.strPos = 0;\n            this.arrayPos = 0;\n            this.curLoop = 0;\n            if (restart) {\n              this.insertCursor();\n              this.options.onReset(this);\n              this.begin();\n            }\n          }\n\n          /**\n           * Begins the typing animation\n           * @private\n           */\n        }, {\n          key: 'begin',\n          value: function begin() {\n            var _this = this;\n            this.options.onBegin(this);\n            this.typingComplete = false;\n            this.shuffleStringsIfNeeded(this);\n            this.insertCursor();\n            if (this.bindInputFocusEvents) this.bindFocusEvents();\n            this.timeout = setTimeout(function () {\n              // Check if there is some text in the element, if yes start by backspacing the default message\n              if (!_this.currentElContent || _this.currentElContent.length === 0) {\n                _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n              } else {\n                // Start typing\n                _this.backspace(_this.currentElContent, _this.currentElContent.length);\n              }\n            }, this.startDelay);\n          }\n\n          /**\n           * Called for each character typed\n           * @param {string} curString the current string in the strings array\n           * @param {number} curStrPos the current position in the curString\n           * @private\n           */\n        }, {\n          key: 'typewrite',\n          value: function typewrite(curString, curStrPos) {\n            var _this2 = this;\n            if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n              this.el.classList.remove(this.fadeOutClass);\n              if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n            }\n            var humanize = this.humanizer(this.typeSpeed);\n            var numChars = 1;\n            if (this.pause.status === true) {\n              this.setPauseStatus(curString, curStrPos, true);\n              return;\n            }\n\n            // contain typing function in a timeout humanize'd delay\n            this.timeout = setTimeout(function () {\n              // skip over any HTML chars\n              curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n              var pauseTime = 0;\n              var substr = curString.substr(curStrPos);\n              // check for an escape character before a pause value\n              // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n              // single ^ are removed from string\n              if (substr.charAt(0) === '^') {\n                if (/^\\^\\d+/.test(substr)) {\n                  var skip = 1; // skip at least 1\n                  substr = /\\d+/.exec(substr)[0];\n                  skip += substr.length;\n                  pauseTime = parseInt(substr);\n                  _this2.temporaryPause = true;\n                  _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n                  // strip out the escape character and pause value so they're not printed\n                  curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n                  _this2.toggleBlinking(true);\n                }\n              }\n\n              // check for skip characters formatted as\n              // \"this is a `string to print NOW` ...\"\n              if (substr.charAt(0) === '`') {\n                while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n                  numChars++;\n                  if (curStrPos + numChars > curString.length) break;\n                }\n                // strip out the escape characters and append all the string in between\n                var stringBeforeSkip = curString.substring(0, curStrPos);\n                var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n                var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n                curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n                numChars--;\n              }\n\n              // timeout for any pause after a character\n              _this2.timeout = setTimeout(function () {\n                // Accounts for blinking while paused\n                _this2.toggleBlinking(false);\n\n                // We're done with this sentence!\n                if (curStrPos >= curString.length) {\n                  _this2.doneTyping(curString, curStrPos);\n                } else {\n                  _this2.keepTyping(curString, curStrPos, numChars);\n                }\n                // end of character pause\n                if (_this2.temporaryPause) {\n                  _this2.temporaryPause = false;\n                  _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n                }\n              }, pauseTime);\n\n              // humanized value for typing\n            }, humanize);\n          }\n\n          /**\n           * Continue to the next string & begin typing\n           * @param {string} curString the current string in the strings array\n           * @param {number} curStrPos the current position in the curString\n           * @private\n           */\n        }, {\n          key: 'keepTyping',\n          value: function keepTyping(curString, curStrPos, numChars) {\n            // call before functions if applicable\n            if (curStrPos === 0) {\n              this.toggleBlinking(false);\n              this.options.preStringTyped(this.arrayPos, this);\n            }\n            // start typing each new char into existing string\n            // curString: arg, this.el.html: original text inside element\n            curStrPos += numChars;\n            var nextString = curString.substr(0, curStrPos);\n            this.replaceText(nextString);\n            // loop the function\n            this.typewrite(curString, curStrPos);\n          }\n\n          /**\n           * We're done typing the current string\n           * @param {string} curString the current string in the strings array\n           * @param {number} curStrPos the current position in the curString\n           * @private\n           */\n        }, {\n          key: 'doneTyping',\n          value: function doneTyping(curString, curStrPos) {\n            var _this3 = this;\n\n            // fires callback function\n            this.options.onStringTyped(this.arrayPos, this);\n            this.toggleBlinking(true);\n            // is this the final string\n            if (this.arrayPos === this.strings.length - 1) {\n              // callback that occurs on the last typed string\n              this.complete();\n              // quit if we wont loop back\n              if (this.loop === false || this.curLoop === this.loopCount) {\n                return;\n              }\n            }\n            this.timeout = setTimeout(function () {\n              _this3.backspace(curString, curStrPos);\n            }, this.backDelay);\n          }\n\n          /**\n           * Backspaces 1 character at a time\n           * @param {string} curString the current string in the strings array\n           * @param {number} curStrPos the current position in the curString\n           * @private\n           */\n        }, {\n          key: 'backspace',\n          value: function backspace(curString, curStrPos) {\n            var _this4 = this;\n            if (this.pause.status === true) {\n              this.setPauseStatus(curString, curStrPos, false);\n              return;\n            }\n            if (this.fadeOut) return this.initFadeOut();\n            this.toggleBlinking(false);\n            var humanize = this.humanizer(this.backSpeed);\n            this.timeout = setTimeout(function () {\n              curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n              // replace text with base text + typed characters\n              var curStringAtPosition = curString.substr(0, curStrPos);\n              _this4.replaceText(curStringAtPosition);\n\n              // if smartBack is enabled\n              if (_this4.smartBackspace) {\n                // the remaining part of the current string is equal of the same part of the new string\n                var nextString = _this4.strings[_this4.arrayPos + 1];\n                if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n                  _this4.stopNum = curStrPos;\n                } else {\n                  _this4.stopNum = 0;\n                }\n              }\n\n              // if the number (id of character in current string) is\n              // less than the stop number, keep going\n              if (curStrPos > _this4.stopNum) {\n                // subtract characters one by one\n                curStrPos--;\n                // loop the function\n                _this4.backspace(curString, curStrPos);\n              } else if (curStrPos <= _this4.stopNum) {\n                // if the stop number has been reached, increase\n                // array position to next string\n                _this4.arrayPos++;\n                // When looping, begin at the beginning after backspace complete\n                if (_this4.arrayPos === _this4.strings.length) {\n                  _this4.arrayPos = 0;\n                  _this4.options.onLastStringBackspaced();\n                  _this4.shuffleStringsIfNeeded();\n                  _this4.begin();\n                } else {\n                  _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n                }\n              }\n              // humanized value for typing\n            }, humanize);\n          }\n\n          /**\n           * Full animation is complete\n           * @private\n           */\n        }, {\n          key: 'complete',\n          value: function complete() {\n            this.options.onComplete(this);\n            if (this.loop) {\n              this.curLoop++;\n            } else {\n              this.typingComplete = true;\n            }\n          }\n\n          /**\n           * Has the typing been stopped\n           * @param {string} curString the current string in the strings array\n           * @param {number} curStrPos the current position in the curString\n           * @param {boolean} isTyping\n           * @private\n           */\n        }, {\n          key: 'setPauseStatus',\n          value: function setPauseStatus(curString, curStrPos, isTyping) {\n            this.pause.typewrite = isTyping;\n            this.pause.curString = curString;\n            this.pause.curStrPos = curStrPos;\n          }\n\n          /**\n           * Toggle the blinking cursor\n           * @param {boolean} isBlinking\n           * @private\n           */\n        }, {\n          key: 'toggleBlinking',\n          value: function toggleBlinking(isBlinking) {\n            if (!this.cursor) return;\n            // if in paused state, don't toggle blinking a 2nd time\n            if (this.pause.status) return;\n            if (this.cursorBlinking === isBlinking) return;\n            this.cursorBlinking = isBlinking;\n            if (isBlinking) {\n              this.cursor.classList.add('typed-cursor--blink');\n            } else {\n              this.cursor.classList.remove('typed-cursor--blink');\n            }\n          }\n\n          /**\n           * Speed in MS to type\n           * @param {number} speed\n           * @private\n           */\n        }, {\n          key: 'humanizer',\n          value: function humanizer(speed) {\n            return Math.round(Math.random() * speed / 2) + speed;\n          }\n\n          /**\n           * Shuffle the sequence of the strings array\n           * @private\n           */\n        }, {\n          key: 'shuffleStringsIfNeeded',\n          value: function shuffleStringsIfNeeded() {\n            if (!this.shuffle) return;\n            this.sequence = this.sequence.sort(function () {\n              return Math.random() - 0.5;\n            });\n          }\n\n          /**\n           * Adds a CSS class to fade out current string\n           * @private\n           */\n        }, {\n          key: 'initFadeOut',\n          value: function initFadeOut() {\n            var _this5 = this;\n            this.el.className += ' ' + this.fadeOutClass;\n            if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n            return setTimeout(function () {\n              _this5.arrayPos++;\n              _this5.replaceText('');\n\n              // Resets current string if end of loop reached\n              if (_this5.strings.length > _this5.arrayPos) {\n                _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n              } else {\n                _this5.typewrite(_this5.strings[0], 0);\n                _this5.arrayPos = 0;\n              }\n            }, this.fadeOutDelay);\n          }\n\n          /**\n           * Replaces current text in the HTML element\n           * depending on element type\n           * @param {string} str\n           * @private\n           */\n        }, {\n          key: 'replaceText',\n          value: function replaceText(str) {\n            if (this.attr) {\n              this.el.setAttribute(this.attr, str);\n            } else {\n              if (this.isInput) {\n                this.el.value = str;\n              } else if (this.contentType === 'html') {\n                this.el.innerHTML = str;\n              } else {\n                this.el.textContent = str;\n              }\n            }\n          }\n\n          /**\n           * If using input elements, bind focus in order to\n           * start and stop the animation\n           * @private\n           */\n        }, {\n          key: 'bindFocusEvents',\n          value: function bindFocusEvents() {\n            var _this6 = this;\n            if (!this.isInput) return;\n            this.el.addEventListener('focus', function (e) {\n              _this6.stop();\n            });\n            this.el.addEventListener('blur', function (e) {\n              if (_this6.el.value && _this6.el.value.length !== 0) {\n                return;\n              }\n              _this6.start();\n            });\n          }\n\n          /**\n           * On init, insert the cursor element\n           * @private\n           */\n        }, {\n          key: 'insertCursor',\n          value: function insertCursor() {\n            if (!this.showCursor) return;\n            if (this.cursor) return;\n            this.cursor = document.createElement('span');\n            this.cursor.className = 'typed-cursor';\n            this.cursor.setAttribute('aria-hidden', true);\n            this.cursor.innerHTML = this.cursorChar;\n            this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n          }\n        }]);\n        return Typed;\n      }();\n      exports['default'] = Typed;\n      module.exports = exports['default'];\n\n      /***/\n    }, /* 1 */\n    /***/function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n        return target;\n      };\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          'default': obj\n        };\n      }\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError('Cannot call a class as a function');\n        }\n      }\n      var _defaultsJs = __webpack_require__(2);\n      var _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\n      /**\n       * Initialize the Typed object\n       */\n\n      var Initializer = function () {\n        function Initializer() {\n          _classCallCheck(this, Initializer);\n        }\n        _createClass(Initializer, [{\n          key: 'load',\n          /**\n           * Load up defaults & options on the Typed instance\n           * @param {Typed} self instance of Typed\n           * @param {object} options options object\n           * @param {string} elementId HTML element ID _OR_ instance of HTML element\n           * @private\n           */\n\n          value: function load(self, options, elementId) {\n            // chosen element to manipulate text\n            if (typeof elementId === 'string') {\n              self.el = document.querySelector(elementId);\n            } else {\n              self.el = elementId;\n            }\n            self.options = _extends({}, _defaultsJs2['default'], options);\n\n            // attribute to type into\n            self.isInput = self.el.tagName.toLowerCase() === 'input';\n            self.attr = self.options.attr;\n            self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\n            // show cursor\n            self.showCursor = self.isInput ? false : self.options.showCursor;\n\n            // custom cursor\n            self.cursorChar = self.options.cursorChar;\n\n            // Is the cursor blinking\n            self.cursorBlinking = true;\n\n            // text content of element\n            self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\n            // html or plain text\n            self.contentType = self.options.contentType;\n\n            // typing speed\n            self.typeSpeed = self.options.typeSpeed;\n\n            // add a delay before typing starts\n            self.startDelay = self.options.startDelay;\n\n            // backspacing speed\n            self.backSpeed = self.options.backSpeed;\n\n            // only backspace what doesn't match the previous string\n            self.smartBackspace = self.options.smartBackspace;\n\n            // amount of time to wait before backspacing\n            self.backDelay = self.options.backDelay;\n\n            // Fade out instead of backspace\n            self.fadeOut = self.options.fadeOut;\n            self.fadeOutClass = self.options.fadeOutClass;\n            self.fadeOutDelay = self.options.fadeOutDelay;\n\n            // variable to check whether typing is currently paused\n            self.isPaused = false;\n\n            // input strings of text\n            self.strings = self.options.strings.map(function (s) {\n              return s.trim();\n            });\n\n            // div containing strings\n            if (typeof self.options.stringsElement === 'string') {\n              self.stringsElement = document.querySelector(self.options.stringsElement);\n            } else {\n              self.stringsElement = self.options.stringsElement;\n            }\n            if (self.stringsElement) {\n              self.strings = [];\n              self.stringsElement.style.display = 'none';\n              var strings = Array.prototype.slice.apply(self.stringsElement.children);\n              var stringsLength = strings.length;\n              if (stringsLength) {\n                for (var i = 0; i < stringsLength; i += 1) {\n                  var stringEl = strings[i];\n                  self.strings.push(stringEl.innerHTML.trim());\n                }\n              }\n            }\n\n            // character number position of current string\n            self.strPos = 0;\n\n            // current array position\n            self.arrayPos = 0;\n\n            // index of string to stop backspacing on\n            self.stopNum = 0;\n\n            // Looping logic\n            self.loop = self.options.loop;\n            self.loopCount = self.options.loopCount;\n            self.curLoop = 0;\n\n            // shuffle the strings\n            self.shuffle = self.options.shuffle;\n            // the order of strings\n            self.sequence = [];\n            self.pause = {\n              status: false,\n              typewrite: true,\n              curString: '',\n              curStrPos: 0\n            };\n\n            // When the typing is complete (when not looped)\n            self.typingComplete = false;\n\n            // Set the order in which the strings are typed\n            for (var i in self.strings) {\n              self.sequence[i] = i;\n            }\n\n            // If there is some text in the element\n            self.currentElContent = this.getCurrentElContent(self);\n            self.autoInsertCss = self.options.autoInsertCss;\n            this.appendAnimationCss(self);\n          }\n        }, {\n          key: 'getCurrentElContent',\n          value: function getCurrentElContent(self) {\n            var elContent = '';\n            if (self.attr) {\n              elContent = self.el.getAttribute(self.attr);\n            } else if (self.isInput) {\n              elContent = self.el.value;\n            } else if (self.contentType === 'html') {\n              elContent = self.el.innerHTML;\n            } else {\n              elContent = self.el.textContent;\n            }\n            return elContent;\n          }\n        }, {\n          key: 'appendAnimationCss',\n          value: function appendAnimationCss(self) {\n            var cssDataName = 'data-typed-js-css';\n            if (!self.autoInsertCss) {\n              return;\n            }\n            if (!self.showCursor && !self.fadeOut) {\n              return;\n            }\n            if (document.querySelector('[' + cssDataName + ']')) {\n              return;\n            }\n            var css = document.createElement('style');\n            css.type = 'text/css';\n            css.setAttribute(cssDataName, true);\n            var innerCss = '';\n            if (self.showCursor) {\n              innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n            }\n            if (self.fadeOut) {\n              innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n            }\n            if (css.length === 0) {\n              return;\n            }\n            css.innerHTML = innerCss;\n            document.body.appendChild(css);\n          }\n        }]);\n        return Initializer;\n      }();\n      exports['default'] = Initializer;\n      var initializer = new Initializer();\n      exports.initializer = initializer;\n\n      /***/\n    }, /* 2 */\n    /***/function (module, exports) {\n      /**\n       * Defaults & options\n       * @returns {object} Typed defaults & options\n       * @public\n       */\n\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      var defaults = {\n        /**\n         * @property {array} strings strings to be typed\n         * @property {string} stringsElement ID of element containing string children\n         */\n        strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n        stringsElement: null,\n        /**\n         * @property {number} typeSpeed type speed in milliseconds\n         */\n        typeSpeed: 0,\n        /**\n         * @property {number} startDelay time before typing starts in milliseconds\n         */\n        startDelay: 0,\n        /**\n         * @property {number} backSpeed backspacing speed in milliseconds\n         */\n        backSpeed: 0,\n        /**\n         * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n         */\n        smartBackspace: true,\n        /**\n         * @property {boolean} shuffle shuffle the strings\n         */\n        shuffle: false,\n        /**\n         * @property {number} backDelay time before backspacing in milliseconds\n         */\n        backDelay: 700,\n        /**\n         * @property {boolean} fadeOut Fade out instead of backspace\n         * @property {string} fadeOutClass css class for fade animation\n         * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n         */\n        fadeOut: false,\n        fadeOutClass: 'typed-fade-out',\n        fadeOutDelay: 500,\n        /**\n         * @property {boolean} loop loop strings\n         * @property {number} loopCount amount of loops\n         */\n        loop: false,\n        loopCount: Infinity,\n        /**\n         * @property {boolean} showCursor show cursor\n         * @property {string} cursorChar character for cursor\n         * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n         */\n        showCursor: true,\n        cursorChar: '|',\n        autoInsertCss: true,\n        /**\n         * @property {string} attr attribute for typing\n         * Ex: input placeholder, value, or just HTML text\n         */\n        attr: null,\n        /**\n         * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n         */\n        bindInputFocusEvents: false,\n        /**\n         * @property {string} contentType 'html' or 'null' for plaintext\n         */\n        contentType: 'html',\n        /**\n         * Before it begins typing\n         * @param {Typed} self\n         */\n        onBegin: function onBegin(self) {},\n        /**\n         * All typing is complete\n         * @param {Typed} self\n         */\n        onComplete: function onComplete(self) {},\n        /**\n         * Before each string is typed\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        preStringTyped: function preStringTyped(arrayPos, self) {},\n        /**\n         * After each string is typed\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        onStringTyped: function onStringTyped(arrayPos, self) {},\n        /**\n         * During looping, after last string is typed\n         * @param {Typed} self\n         */\n        onLastStringBackspaced: function onLastStringBackspaced(self) {},\n        /**\n         * Typing has been stopped\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        onTypingPaused: function onTypingPaused(arrayPos, self) {},\n        /**\n         * Typing has been started after being stopped\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        onTypingResumed: function onTypingResumed(arrayPos, self) {},\n        /**\n         * After reset\n         * @param {Typed} self\n         */\n        onReset: function onReset(self) {},\n        /**\n         * After stop\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        onStop: function onStop(arrayPos, self) {},\n        /**\n         * After start\n         * @param {number} arrayPos\n         * @param {Typed} self\n         */\n        onStart: function onStart(arrayPos, self) {},\n        /**\n         * After destroy\n         * @param {Typed} self\n         */\n        onDestroy: function onDestroy(self) {}\n      };\n      exports['default'] = defaults;\n      module.exports = exports['default'];\n\n      /***/\n    }, /* 3 */\n    /***/function (module, exports) {\n      /**\n       * TODO: These methods can probably be combined somehow\n       * Parse HTML tags & HTML Characters\n       */\n\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError('Cannot call a class as a function');\n        }\n      }\n      var HTMLParser = function () {\n        function HTMLParser() {\n          _classCallCheck(this, HTMLParser);\n        }\n        _createClass(HTMLParser, [{\n          key: 'typeHtmlChars',\n          /**\n           * Type HTML tags & HTML Characters\n           * @param {string} curString Current string\n           * @param {number} curStrPos Position in current string\n           * @param {Typed} self instance of Typed\n           * @returns {number} a new string position\n           * @private\n           */\n\n          value: function typeHtmlChars(curString, curStrPos, self) {\n            if (self.contentType !== 'html') return curStrPos;\n            var curChar = curString.substr(curStrPos).charAt(0);\n            if (curChar === '<' || curChar === '&') {\n              var endTag = '';\n              if (curChar === '<') {\n                endTag = '>';\n              } else {\n                endTag = ';';\n              }\n              while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n                curStrPos++;\n                if (curStrPos + 1 > curString.length) {\n                  break;\n                }\n              }\n              curStrPos++;\n            }\n            return curStrPos;\n          }\n\n          /**\n           * Backspace HTML tags and HTML Characters\n           * @param {string} curString Current string\n           * @param {number} curStrPos Position in current string\n           * @param {Typed} self instance of Typed\n           * @returns {number} a new string position\n           * @private\n           */\n        }, {\n          key: 'backSpaceHtmlChars',\n          value: function backSpaceHtmlChars(curString, curStrPos, self) {\n            if (self.contentType !== 'html') return curStrPos;\n            var curChar = curString.substr(curStrPos).charAt(0);\n            if (curChar === '>' || curChar === ';') {\n              var endTag = '';\n              if (curChar === '>') {\n                endTag = '<';\n              } else {\n                endTag = '&';\n              }\n              while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n                curStrPos--;\n                if (curStrPos < 0) {\n                  break;\n                }\n              }\n              curStrPos--;\n            }\n            return curStrPos;\n          }\n        }]);\n        return HTMLParser;\n      }();\n      exports['default'] = HTMLParser;\n      var htmlParser = new HTMLParser();\n      exports.htmlParser = htmlParser;\n\n      /***/\n    }\n    /******/])\n  );\n});\n\n;","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_initializerJs","_htmlParserJs","Typed","elementId","options","initializer","load","begin","toggle","pause","status","start","stop","typingComplete","toggleBlinking","onStop","arrayPos","typewrite","curString","curStrPos","backspace","onStart","destroy","reset","onDestroy","restart","arguments","undefined","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","strPos","curLoop","insertCursor","onReset","_this","onBegin","shuffleStringsIfNeeded","bindInputFocusEvents","bindFocusEvents","setTimeout","currentElContent","strings","sequence","startDelay","_this2","fadeOut","el","classList","contains","fadeOutClass","remove","humanize","humanizer","typeSpeed","numChars","setPauseStatus","htmlParser","typeHtmlChars","pauseTime","substr","charAt","test","skip","exec","parseInt","temporaryPause","onTypingPaused","substring","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","onTypingResumed","preStringTyped","nextString","_this3","onStringTyped","complete","loop","loopCount","backDelay","_this4","initFadeOut","backSpeed","backSpaceHtmlChars","curStringAtPosition","smartBackspace","stopNum","onLastStringBackspaced","onComplete","isTyping","isBlinking","cursorBlinking","add","speed","Math","round","random","shuffle","sort","_this5","className","fadeOutDelay","str","attr","setAttribute","isInput","contentType","innerHTML","textContent","_this6","addEventListener","e","showCursor","document","createElement","cursorChar","insertBefore","nextSibling","_extends","assign","source","hasOwnProperty","_interopRequireDefault","obj","__esModule","_defaultsJs","_defaultsJs2","Initializer","self","querySelector","tagName","toLowerCase","elContent","getAttribute","isPaused","map","s","trim","stringsElement","style","display","Array","slice","apply","children","stringsLength","stringEl","push","getCurrentElContent","autoInsertCss","appendAnimationCss","cssDataName","css","type","innerCss","body","appendChild","defaults","Infinity","HTMLParser","curChar","endTag"],"sources":["D:/Luky/Learn Coding/Personal Website/website/node_modules/typed.js/lib/typed.js"],"sourcesContent":["/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.12\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\t/**\n\t * Welcome to Typed.js!\n\t * @param {string} elementId HTML element ID _OR_ HTML element\n\t * @param {object} options options object\n\t * @returns {object} a new Typed object\n\t */\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    _initializerJs.initializer.load(this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  /**\n\t   * Toggle start() and stop() of the Typed instance\n\t   * @public\n\t   */\n\t\n\t  _createClass(Typed, [{\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.pause.status ? this.start() : this.stop();\n\t    }\n\t\n\t    /**\n\t     * Stop typing / backspacing and enable cursor blinking\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Start typing / backspacing after being stopped\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Destroy this instance of Typed\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy(this);\n\t    }\n\t\n\t    /**\n\t     * Reset Typed and optionally restarts\n\t     * @param {boolean} restart\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (this.cursor && this.cursor.parentNode) {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t        this.cursor = null;\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.insertCursor();\n\t        this.options.onReset(this);\n\t        this.begin();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begins the typing animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'begin',\n\t    value: function begin() {\n\t      var _this = this;\n\t\n\t      this.options.onBegin(this);\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(this);\n\t      this.insertCursor();\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\n\t      this.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t        } else {\n\t          // Start typing\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t        }\n\t      }, this.startDelay);\n\t    }\n\t\n\t    /**\n\t     * Called for each character typed\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var _this2 = this;\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t      var numChars = 1;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      this.timeout = setTimeout(function () {\n\t        // skip over any HTML chars\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\t\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        if (substr.charAt(0) === '^') {\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            var skip = 1; // skip at least 1\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t            _this2.temporaryPause = true;\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t            // strip out the escape character and pause value so they're not printed\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t            _this2.toggleBlinking(true);\n\t          }\n\t        }\n\t\n\t        // check for skip characters formatted as\n\t        // \"this is a `string to print NOW` ...\"\n\t        if (substr.charAt(0) === '`') {\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t            numChars++;\n\t            if (curStrPos + numChars > curString.length) break;\n\t          }\n\t          // strip out the escape characters and append all the string in between\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t          numChars--;\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        _this2.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          _this2.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos >= curString.length) {\n\t            _this2.doneTyping(curString, curStrPos);\n\t          } else {\n\t            _this2.keepTyping(curString, curStrPos, numChars);\n\t          }\n\t          // end of character pause\n\t          if (_this2.temporaryPause) {\n\t            _this2.temporaryPause = false;\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t          }\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Continue to the next string & begin typing\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos, numChars) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos, this);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      curStrPos += numChars;\n\t      var nextString = curString.substr(0, curStrPos);\n\t      this.replaceText(nextString);\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t\n\t    /**\n\t     * We're done typing the current string\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var _this3 = this;\n\t\n\t      // fires callback function\n\t      this.options.onStringTyped(this.arrayPos, this);\n\t      this.toggleBlinking(true);\n\t      // is this the final string\n\t      if (this.arrayPos === this.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        this.complete();\n\t        // quit if we wont loop back\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      this.timeout = setTimeout(function () {\n\t        _this3.backspace(curString, curStrPos);\n\t      }, this.backDelay);\n\t    }\n\t\n\t    /**\n\t     * Backspaces 1 character at a time\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var _this4 = this;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, false);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      this.timeout = setTimeout(function () {\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t        // replace text with base text + typed characters\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\n\t        _this4.replaceText(curStringAtPosition);\n\t\n\t        // if smartBack is enabled\n\t        if (_this4.smartBackspace) {\n\t          // the remaining part of the current string is equal of the same part of the new string\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t            _this4.stopNum = curStrPos;\n\t          } else {\n\t            _this4.stopNum = 0;\n\t          }\n\t        }\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > _this4.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          _this4.backspace(curString, curStrPos);\n\t        } else if (curStrPos <= _this4.stopNum) {\n\t          // if the stop number has been reached, increase\n\t          // array position to next string\n\t          _this4.arrayPos++;\n\t          // When looping, begin at the beginning after backspace complete\n\t          if (_this4.arrayPos === _this4.strings.length) {\n\t            _this4.arrayPos = 0;\n\t            _this4.options.onLastStringBackspaced();\n\t            _this4.shuffleStringsIfNeeded();\n\t            _this4.begin();\n\t          } else {\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t          }\n\t        }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Full animation is complete\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete(this);\n\t      if (this.loop) {\n\t        this.curLoop++;\n\t      } else {\n\t        this.typingComplete = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Has the typing been stopped\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @param {boolean} isTyping\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Toggle the blinking cursor\n\t     * @param {boolean} isBlinking\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(isBlinking) {\n\t      if (!this.cursor) return;\n\t      // if in paused state, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === isBlinking) return;\n\t      this.cursorBlinking = isBlinking;\n\t      if (isBlinking) {\n\t        this.cursor.classList.add('typed-cursor--blink');\n\t      } else {\n\t        this.cursor.classList.remove('typed-cursor--blink');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Speed in MS to type\n\t     * @param {number} speed\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      return Math.round(Math.random() * speed / 2) + speed;\n\t    }\n\t\n\t    /**\n\t     * Shuffle the sequence of the strings array\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds a CSS class to fade out current string\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var _this5 = this;\n\t\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        _this5.arrayPos++;\n\t        _this5.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (_this5.strings.length > _this5.arrayPos) {\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t        } else {\n\t          _this5.typewrite(_this5.strings[0], 0);\n\t          _this5.arrayPos = 0;\n\t        }\n\t      }, this.fadeOutDelay);\n\t    }\n\t\n\t    /**\n\t     * Replaces current text in the HTML element\n\t     * depending on element type\n\t     * @param {string} str\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * If using input elements, bind focus in order to\n\t     * start and stop the animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'bindFocusEvents',\n\t    value: function bindFocusEvents() {\n\t      var _this6 = this;\n\t\n\t      if (!this.isInput) return;\n\t      this.el.addEventListener('focus', function (e) {\n\t        _this6.stop();\n\t      });\n\t      this.el.addEventListener('blur', function (e) {\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\n\t          return;\n\t        }\n\t        _this6.start();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * On init, insert the cursor element\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      if (!this.showCursor) return;\n\t      if (this.cursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.setAttribute('aria-hidden', true);\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\t/**\n\t * Initialize the Typed object\n\t */\n\t\n\tvar Initializer = (function () {\n\t  function Initializer() {\n\t    _classCallCheck(this, Initializer);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'load',\n\t\n\t    /**\n\t     * Load up defaults & options on the Typed instance\n\t     * @param {Typed} self instance of Typed\n\t     * @param {object} options options object\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\n\t     * @private\n\t     */\n\t\n\t    value: function load(self, options, elementId) {\n\t      // chosen element to manipulate text\n\t      if (typeof elementId === 'string') {\n\t        self.el = document.querySelector(elementId);\n\t      } else {\n\t        self.el = elementId;\n\t      }\n\t\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\n\t\n\t      // attribute to type into\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t      self.attr = self.options.attr;\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\t\n\t      // show cursor\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t      // custom cursor\n\t      self.cursorChar = self.options.cursorChar;\n\t\n\t      // Is the cursor blinking\n\t      self.cursorBlinking = true;\n\t\n\t      // text content of element\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t      // html or plain text\n\t      self.contentType = self.options.contentType;\n\t\n\t      // typing speed\n\t      self.typeSpeed = self.options.typeSpeed;\n\t\n\t      // add a delay before typing starts\n\t      self.startDelay = self.options.startDelay;\n\t\n\t      // backspacing speed\n\t      self.backSpeed = self.options.backSpeed;\n\t\n\t      // only backspace what doesn't match the previous string\n\t      self.smartBackspace = self.options.smartBackspace;\n\t\n\t      // amount of time to wait before backspacing\n\t      self.backDelay = self.options.backDelay;\n\t\n\t      // Fade out instead of backspace\n\t      self.fadeOut = self.options.fadeOut;\n\t      self.fadeOutClass = self.options.fadeOutClass;\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t      // variable to check whether typing is currently paused\n\t      self.isPaused = false;\n\t\n\t      // input strings of text\n\t      self.strings = self.options.strings.map(function (s) {\n\t        return s.trim();\n\t      });\n\t\n\t      // div containing strings\n\t      if (typeof self.options.stringsElement === 'string') {\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\n\t      } else {\n\t        self.stringsElement = self.options.stringsElement;\n\t      }\n\t\n\t      if (self.stringsElement) {\n\t        self.strings = [];\n\t        self.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t        var stringsLength = strings.length;\n\t\n\t        if (stringsLength) {\n\t          for (var i = 0; i < stringsLength; i += 1) {\n\t            var stringEl = strings[i];\n\t            self.strings.push(stringEl.innerHTML.trim());\n\t          }\n\t        }\n\t      }\n\t\n\t      // character number position of current string\n\t      self.strPos = 0;\n\t\n\t      // current array position\n\t      self.arrayPos = 0;\n\t\n\t      // index of string to stop backspacing on\n\t      self.stopNum = 0;\n\t\n\t      // Looping logic\n\t      self.loop = self.options.loop;\n\t      self.loopCount = self.options.loopCount;\n\t      self.curLoop = 0;\n\t\n\t      // shuffle the strings\n\t      self.shuffle = self.options.shuffle;\n\t      // the order of strings\n\t      self.sequence = [];\n\t\n\t      self.pause = {\n\t        status: false,\n\t        typewrite: true,\n\t        curString: '',\n\t        curStrPos: 0\n\t      };\n\t\n\t      // When the typing is complete (when not looped)\n\t      self.typingComplete = false;\n\t\n\t      // Set the order in which the strings are typed\n\t      for (var i in self.strings) {\n\t        self.sequence[i] = i;\n\t      }\n\t\n\t      // If there is some text in the element\n\t      self.currentElContent = this.getCurrentElContent(self);\n\t\n\t      self.autoInsertCss = self.options.autoInsertCss;\n\t\n\t      this.appendAnimationCss(self);\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }, {\n\t    key: 'appendAnimationCss',\n\t    value: function appendAnimationCss(self) {\n\t      var cssDataName = 'data-typed-js-css';\n\t      if (!self.autoInsertCss) {\n\t        return;\n\t      }\n\t      if (!self.showCursor && !self.fadeOut) {\n\t        return;\n\t      }\n\t      if (document.querySelector('[' + cssDataName + ']')) {\n\t        return;\n\t      }\n\t\n\t      var css = document.createElement('style');\n\t      css.type = 'text/css';\n\t      css.setAttribute(cssDataName, true);\n\t\n\t      var innerCss = '';\n\t      if (self.showCursor) {\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t      }\n\t      if (self.fadeOut) {\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t      }\n\t      if (css.length === 0) {\n\t        return;\n\t      }\n\t      css.innerHTML = innerCss;\n\t      document.body.appendChild(css);\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tvar initializer = new Initializer();\n\texports.initializer = initializer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Defaults & options\n\t * @returns {object} Typed defaults & options\n\t * @public\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  /**\n\t   * @property {array} strings strings to be typed\n\t   * @property {string} stringsElement ID of element containing string children\n\t   */\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t  stringsElement: null,\n\t\n\t  /**\n\t   * @property {number} typeSpeed type speed in milliseconds\n\t   */\n\t  typeSpeed: 0,\n\t\n\t  /**\n\t   * @property {number} startDelay time before typing starts in milliseconds\n\t   */\n\t  startDelay: 0,\n\t\n\t  /**\n\t   * @property {number} backSpeed backspacing speed in milliseconds\n\t   */\n\t  backSpeed: 0,\n\t\n\t  /**\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n\t   */\n\t  smartBackspace: true,\n\t\n\t  /**\n\t   * @property {boolean} shuffle shuffle the strings\n\t   */\n\t  shuffle: false,\n\t\n\t  /**\n\t   * @property {number} backDelay time before backspacing in milliseconds\n\t   */\n\t  backDelay: 700,\n\t\n\t  /**\n\t   * @property {boolean} fadeOut Fade out instead of backspace\n\t   * @property {string} fadeOutClass css class for fade animation\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n\t   */\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500,\n\t\n\t  /**\n\t   * @property {boolean} loop loop strings\n\t   * @property {number} loopCount amount of loops\n\t   */\n\t  loop: false,\n\t  loopCount: Infinity,\n\t\n\t  /**\n\t   * @property {boolean} showCursor show cursor\n\t   * @property {string} cursorChar character for cursor\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n\t   */\n\t  showCursor: true,\n\t  cursorChar: '|',\n\t  autoInsertCss: true,\n\t\n\t  /**\n\t   * @property {string} attr attribute for typing\n\t   * Ex: input placeholder, value, or just HTML text\n\t   */\n\t  attr: null,\n\t\n\t  /**\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n\t   */\n\t  bindInputFocusEvents: false,\n\t\n\t  /**\n\t   * @property {string} contentType 'html' or 'null' for plaintext\n\t   */\n\t  contentType: 'html',\n\t\n\t  /**\n\t   * Before it begins typing\n\t   * @param {Typed} self\n\t   */\n\t  onBegin: function onBegin(self) {},\n\t\n\t  /**\n\t   * All typing is complete\n\t   * @param {Typed} self\n\t   */\n\t  onComplete: function onComplete(self) {},\n\t\n\t  /**\n\t   * Before each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * After each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * During looping, after last string is typed\n\t   * @param {Typed} self\n\t   */\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\t\n\t  /**\n\t   * Typing has been stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\t\n\t  /**\n\t   * Typing has been started after being stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\t\n\t  /**\n\t   * After reset\n\t   * @param {Typed} self\n\t   */\n\t  onReset: function onReset(self) {},\n\t\n\t  /**\n\t   * After stop\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStop: function onStop(arrayPos, self) {},\n\t\n\t  /**\n\t   * After start\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStart: function onStart(arrayPos, self) {},\n\t\n\t  /**\n\t   * After destroy\n\t   * @param {Typed} self\n\t   */\n\t  onDestroy: function onDestroy(self) {}\n\t};\n\t\n\texports['default'] = defaults;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * TODO: These methods can probably be combined somehow\n\t * Parse HTML tags & HTML Characters\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t\n\t    /**\n\t     * Type HTML tags & HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Backspace HTML tags and HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '>' || curChar === ';') {\n\t        var endTag = '';\n\t        if (curChar === '>') {\n\t          endTag = '<';\n\t        } else {\n\t          endTag = '&';\n\t        }\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}